{
  "header": {
    "name": "Grzegorz Kozub",
    "title": "Senior Software Engineer",
    "kaizen": "改善",
    "location": "Warsaw, Poland",
    "phone": "(+48) 697 336 338",
    "email": "grzegorz.kozub@gmail.com",
    "web": "http://www.linkedin.com/in/grzegorzkozub",
    "headline": "Arch, Dev and Ops by passion for technology. Always learning, keen on Microservices Architecture and Domain-Driven Design, aims to become a tech full-stack and a programming polyglot. Tech Lead and Team Lead by passion for people. Encourages teams to embrace the DevOps culture and work together according to Lean Principles."
  },
  "recentJob": {
    "company": {
      "name": "Apsis International AB",
      "sector": "Email marketing",
      "profile": "Apsis offers solutions for email marketing, lead management and e-commerce focussed on Nordic and Asian markets currently supplying over 6000 clients including H&M and Ikea. Apsis Pro is an email marketing system that supports creating, testing, sending, automating and tracking emails and SMS. It also supports mailing list management. Individual send-outs vary from a single to a couple of million subscribers. Apsis Pro also has Event and Survey functionality. Apsis Integrations provides APIs with high-performance mailing list import support. On top of that they deliver integration with CRM systems."
    },
    "titles": [
      {
        "name": "Architect, Developer, Tech Lead and Team Leader",
        "time": "July 2015 - September 2016 (1 year 3 months)",
        "tech": ".NET, C#, ASP.Net, SQL Server, T-SQL, JavaScript, AngularJS, Git, TFS, Windows",
        "roles": [
          "As part of Architecture Team I was designing technical solutions for Apsis Pro and Integrations using Domain-Driven Design. Some of them were enhancements to an existing legacy ASP.Net MVC code and some were greenfield designs that were then implemented as AngularJS front-end and ASP.Net WebAPI back-end. I was also involved in technical designs for public REST API improvements, high volume importer performance optimization and push integration rewrite. I took part in choosing the technology that was later used for implementation. My responsibilities were to ensure compatibility with the existing system while allowing high performance, good security, maintainability and deployment story.",
          "As a Tech Lead, I provided mentoring about in-house solutions, architecture and infrastructure. I was approving various implementation choices like database design, libraries, infrastructure alignment etc. I helped developers writing clean and maintainable code that keeps all the SOLID Principles, is properly Unit-Tested and designed according to Apsis DDD Guidance and Coding Standard. I was involved in teaching developers how to conduct a productive Code Review.",
          "As emerging DevOps culture in Apsis was one of my main focuses, I co-authored the Release Process to ensure quick and safe updates to production. I then became the Release Manager. I was co-ordinating release testing and live deployment. We used Git, TFS and Release Management for CI. I also helped maintaining and growing production, staging and development infrastructure implemented as VMs on various cloud computing providers.",
          "Never lost that passion for code, so I still contributed the development and maintenance of multiple web apps, APIs and integration solutions.",
          "I co-designed and took part in On-Call Process that is a 24/7 developer and admin support that improves stability and availability of Apsis Pro and Integrations.",
          "I was given a pleasure of leading a team of 5 great developers in Warsaw. I helped them plan their projects and made sure the have no obstacles. We used our interpretation of Scrum for bigger, more plannable implementations and Kanban for maintenance. I kept track of my teammates work and was responsible for performance reviews and bonuses. I was also interviewing new hires.",
          "Finally, I represented the company in Poland and managed the office in Warsaw."
        ]
      },
      {
        "name": "Software Developer",
        "time": "September 2012 - June 2015 (2 year 10 months)",
        "tech": ".NET, C#, ASP.Net, SQL Server, T-SQL, JavaScript, Ruby, PowerShell, Windows",
        "roles": [
          "I started with Apsis as a developer by joining the Maintenance Team and exploring the system and its codebase by fixing bugs. Later I was assigned to projects that added functionality to Apsis Pro and Integrations.",
          "The code I was exposed to consisted mostly of legacy ASP.Net and ASP.Net MVC web apps with a considerable amount of front-end code in JavaScript using jQuery. Later I had an opportunity to change the background processing apps among which builders taking care of rendering and sending the emails and NServiceBus-based message processors are most noteworthy. Finally I got to write code in public REST API and mailing list importers. I was also involved in changing legacy T-SQL stored procedures.",
          "When a proper Continuous Integration turned out to be needed, together with a consultant hired for this purpose I was coding an in-house, custom deployment solution in Ruby and PowerShell."
        ]
      }
    ]
  },
  "pastJobs": [
    {
      "company": {
        "name": "Hewlett Packard Enterprise"
      },
      "titles": [
        {
          "name": "Tech Lead and Software Developer at Microsoft Practice",
          "sector": "Public administration",
          "time": "January 2010 - August 2012 (2 years 8 months)",
          "tech": ".NET, C#, ASP.Net, SQL Server, T-SQL, JavaScript, Digital Certificates, Windows",
          "roles": [
            "Maintain and develop web and desktop apps",
            "Implement transport security, authentication and authorization for sensitive web services",
            "Provide consultancy for Microsoft technology stack and web technology",
            "Be a Tech Lead for an agile development team following Scrum"
          ]
        },
        {
          "name": "Banking Multi-channel Front-end Developer",
          "sector": "Banking",
          "time": "March 2009 - December 2009 (10 months)",
          "tech": ".NET, C#, XHTML, XSLT, Oracle, PL/SQL, JavaScript, Shell Scripting, UNIX",
          "roles": [
            "Develop fixes and changes for a multi-technology web app",
            "Design and implement reports with UNIX Shell and PL/SQL"
          ]
        }
      ]
    },
    {
      "company": {
        "name": "Electronic Data Systems"
      },
      "titles": [
        {
          "name": "Defect and Release Management Technical Support",
          "sector": "Banking",
          "time": "September 2006 - November 2008 (2 years 3 months)",
          "tech": "Quality Center, QuickTest Professional, Excel, Visual Basic for Applications, Windows",
          "roles": [
            "Plan, develop and support Defect and Release Management Process for a large system implementation",
            "Design and program automated Excel-based tools for Defect and Release Management Process"
          ]
        },
        {
          "name": "Digital Workflow Data SME",
          "sector": "Food",
          "time": "June 2006 - August 2006 (3 months)",
          "tech": "AssetCenter, ServiceCenter, Sybase, SQL, Shell Scripting, UNIX",
          "roles": [
            "Process data using an ITIL-based Asset and Problem Management solution called Digital Workflow"
          ]
        },
        {
          "name": "Migration Technical Tester and Technical Solution Analyst",
          "sector": "Telecommunications",
          "time": "October 2004 - May 2006 (1 year 8 months)",
          "tech": "PowerCenter, Oracle, PL/SQL, Shell Scripting, UNIX",
          "roles": [
            "Analyze, design and provide integration testing for a migration solution"
          ]
        }
      ]
    }
  ],
  "notableProjects": [
    {
      "company": {
        "name": "Apsis International AB"
      },
      "projects": [
        {
          "name": "Event module for APSIS Pro",
          "time": "March 2016",
          "summary": "An interesting project we worked on for Apsis was about re-architecturing and enrich the existing Event module. The functionality allows for managing sessions, sending invites and reminders via email and sms, tracking registrations (with seat booking) and attendance and finally gathering feedback. This was one of the first modules of APSIS Pro designed using Domain-Driven Design. We put it together as a SPA with AngularJS 1.x and ASP.Net Web API supported by some background processing apps. Notably a set of public APIs was included that supported registering and managing attendees. We split work so that all of us worked on all layers as full-stack developers."
        },
        {
          "name": "Updates to APSIS Pro Integrations",
          "time": "August 2016",
          "summary": "Since Apsis is constantly growing it turned out our existing public API, high volume subscription importers and push integration needed a boost in performance. Interestingly, importers and push are expected to work with data from one to a couple million subscribers. Together with my mates in Malmo we've done load testing and improving API and importer throughput. Me and my team in Warsaw rewritten the push integration as a horizontally scalable app based on NServiceBus backed by MSMQ queues."
        }
      ]
    },
    {
      "company": {
        "name": "Hewlett Packard Enterprise"
      },
      "projects": [
        {
          "name": "Driver Candidate Profile",
          "time": "August 2012",
          "summary": "This SOAP web service system is used for processing driver candidate data from inception when a person registers for a driving school, through training and exams to the point when such candidate profile actually becomes input data for a driver's licence doc. We were tasked with designing the XSD schema that supported growing driver candidate history and implementing web services that allow 3rd parties to integrate so that the document flow that was once done on paper via post office is now automated over the wire. That allowed us to grow our skills in Windows Communication Foundation (.NET) and Client Certificates auth."
        },
        {
          "name": "Vehicle and Driver System",
          "time": "August 2011",
          "summary": "For our public administration client in Poland we've been adding changes and fixing defects in the system used on clerk desktops to process vehicle registration and driver's license docs. It's a distributed Windows Forms (.NET) rich client deployed on a couple hundred departments connecting to one of the few regional SQL Server database instances. Notably we used Composite UI Application Block together with the Unit of Work pattern. We also automated the deployment to those desktops with Windows batch scripts and the regional partitioning allowed for canary releases."
        }
      ]
    }
  ],
  "skills": [
    {
      "category": "Design and implementation",
      "skills": [
        {
          "name": "System architecture design",
          "summary": "I have experience in designing application architecture using Domain-Driven Design. I compose apps as domains in DDD sense. I know how to structure web app front-end and back-end as well communicate them via HTTP. I design public REST APIs and background processing apps that talk over HTTP or messages. I contribute to database design and know about how to optimize SQL Server queries for performance. I make sure proper security gets into technical requirements and is implemented. I can suggest technology for implementation. My current learning focus is everything related to Microservices Architecture."
        },
        {
          "name": "Front-end development",
          "summary": "In the past I've developed front-ends in ASP.Net MVC and currently my preferred framework is AngularJS. I have work experience with 1.x and follow the style guide provided by John Pappa. I can code JavaScript quite well including the use of some Design Patterns especially for creating modularized apps. I like my front-end code unit-tested and linted. Recently I enjoy learning TypeScript that makes my JS more productive and less error prone. I have a good understanding of HTML5 and have chosen Bootstrap for styling. I prefer Sass or Less abstraction over plain CSS3."
        },
        {
          "name": "Back-end development",
          "summary": "I've written apps in C# on .NET using ASP.Net MVC, low level ADO.Net or Entity Framework ORM and now I'm learning .NET Core and Node.js. The latter are a better fit to Microservices Architecture. I can develop APIs using ASP.Net Web API and older WCF. I've used NServiceBus library for messaging quite a lot but I prefer RabbitMQ. I've been using NUnit, Moq and FluentAssertions for testing. I have experience in building and maintaining databases on SQL Server and using T-SQL."
        }
      ]
    },
    {
      "category": "Processes, patterns and practices",
      "skills": [
        {
          "name": "Perceive DevOps as organization culture",
          "summary": "I have knowledge about Continuous Integration and Delivery processes and tools. I know git well and used git-flow in my work. I have been using TFS for builds and Release Management for deployment although I prefer a PowerShell script over a Release Management workflow. I have work experience with configuring IIS web server. I contribute to system infrastructure design involving app deployment, scaling out and inter-communication. I've been structuring systems using VMs and now learning about containers. Mostly however, to me, DevOps is a culture I like to promote and aim for people I work with and myself to get better at The Three Ways."
        },
        {
          "name": "Focus on simple, clean and maintainable code",
          "summary": "I believe code is more often read and amended than initially designed and written. For this reason, when writing code, I follow SOLID Principles and attempt to reach the highest possible coverage with maintainable Unit Tests. I like the idea of local coding standard and validating the code with linters. I consider how straightforward and readable my code is before committing it to source control. I understand source control branches and commit history are one of the best documentation for code written in agile manner so I pay attention to proper branch naming, commit atomicity and commit message content."
        }
      ]
    },
    {
      "category": "Leadership",
      "skills": [
        {
          "name": "Tech leadership",
          "summary": "I encourage my teammates to come up with ideas for solutions and then I challenge them and discusses with them. I promote simple, clean and maintainable code that takes advantage of SOLID."
        },
        {
          "name": "Team leadership",
          "summary": "I motivate my teammates to achieve their project goals as well as individual development plans. I reward taking ownership, being innovative and questioning status quo. I help out with dire situations."
        },
        {
          "name": "Always learning and sharing",
          "summary": "I try to keep up with the web and development technology changes. I'm keen on learning new tech and discussing about it during some coffee break. I keep a list of interesting software development books I've read and courses I've completed at https://github.com/GrzegorzKozub/books-and-courses."
        }
      ]
    }
  ]
}
